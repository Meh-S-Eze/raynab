---
description: 
globs: 
alwaysApply: true
---
Based on the Raycast documentation, here's what we need to test the extension:
Development Environment Setup:
Run npm run dev to start the development mode
This enables hot-reloading for testing changes
Required Testing Steps:
Run npm run build locally to perform additional type checking
Check if the extension works with the distribution build
Run npm run lint to verify code style and catch potential issues
Specific Areas to Test:
YNAB API Token configuration in preferences
Tool confirmations for transactions
Error handling with toasts
Loading states in the UI
Currency conversion accuracy
Date validation
UUID validation for categories and accounts
Validation Checklist:
Verify preferences are properly set up with required: true for the API token
Test error cases (network failures, invalid inputs)
Check loading indicators during API calls
Verify transaction confirmations show correct amounts and details
Test memory management with multiple commands
Package Requirements:
Verify package.json has:
Correct Raycast account username in author field
MIT license
Latest Raycast API version
All required dependencies with correct versions
package-lock.json included
Documentation Requirements:
Check Terms of Service compliance for YNAB API usage
Ensure Extension Guidelines are followed
Verify action names follow Title Case convention
Would you like me to elaborate on any of these testing requirements?